/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/three-reflector@1.0.2/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
module.exports=function(e){var t=function(r,a){e.Mesh.call(this,r),this.type="Reflector";var o=this,i=void 0!==(a=a||{}).color?new e.Color(a.color):new e.Color(8355711),n=a.textureWidth||512,l=a.textureHeight||512,s=a.clipBias||0,d=a.shader||t.ReflectorShader,u=void 0!==a.recursion?a.recursion:0,c=new e.Plane,v=new e.Vector3,m=new e.Vector3,p=new e.Vector3,x=new e.Matrix4,f=new e.Vector3(0,0,-1),b=new e.Vector4,h=new e.Vector4,w=new e.Vector3,y=new e.Vector3,M=new e.Vector4,g=new e.Matrix4,R=new e.PerspectiveCamera,V={minFilter:e.LinearFilter,magFilter:e.LinearFilter,format:e.RGBFormat,stencilBuffer:!1},S=new e.WebGLRenderTarget(n,l,V);e.Math.isPowerOfTwo(n)&&e.Math.isPowerOfTwo(l)||(S.texture.generateMipmaps=!1);var D=new e.ShaderMaterial({uniforms:e.UniformsUtils.clone(d.uniforms),fragmentShader:d.fragmentShader,vertexShader:d.vertexShader});D.uniforms.tDiffuse.value=S.texture,D.uniforms.color.value=i,D.uniforms.textureMatrix.value=g,this.material=D,this.onBeforeRender=function(e,t,r){if("recursion"in r.userData){if(r.userData.recursion===u)return;r.userData.recursion++}if(m.setFromMatrixPosition(o.matrixWorld),p.setFromMatrixPosition(r.matrixWorld),x.extractRotation(o.matrixWorld),v.set(0,0,1),v.applyMatrix4(x),w.subVectors(m,p),!(w.dot(v)>0)){w.reflect(v).negate(),w.add(m),x.extractRotation(r.matrixWorld),f.set(0,0,-1),f.applyMatrix4(x),f.add(p),y.subVectors(m,f),y.reflect(v).negate(),y.add(m),R.position.copy(w),R.up.set(0,1,0),R.up.applyMatrix4(x),R.up.reflect(v),R.lookAt(y),R.far=r.far,R.updateMatrixWorld(),R.projectionMatrix.copy(r.projectionMatrix),R.userData.recursion=0,g.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),g.multiply(R.projectionMatrix),g.multiply(R.matrixWorldInverse),g.multiply(o.matrixWorld),c.setFromNormalAndCoplanarPoint(v,m),c.applyMatrix4(R.matrixWorldInverse),b.set(c.normal.x,c.normal.y,c.normal.z,c.constant);var a=R.projectionMatrix;M.x=(Math.sign(b.x)+a.elements[8])/a.elements[0],M.y=(Math.sign(b.y)+a.elements[9])/a.elements[5],M.z=-1,M.w=(1+a.elements[10])/a.elements[14],b.multiplyScalar(2/b.dot(M)),a.elements[2]=b.x,a.elements[6]=b.y,a.elements[10]=b.z+1-s,a.elements[14]=b.w,o.visible=!1;var i=e.getRenderTarget(),n=e.vr.enabled,l=e.shadowMap.autoUpdate;e.vr.enabled=!1,e.shadowMap.autoUpdate=!1,e.render(t,R,S,!0),e.vr.enabled=n,e.shadowMap.autoUpdate=l,e.setRenderTarget(i);var d=r.bounds;if(void 0!==d){var V=e.getSize(),D=e.getPixelRatio();h.x=d.x*V.width*D,h.y=d.y*V.height*D,h.z=d.z*V.width*D,h.w=d.w*V.height*D,e.state.viewport(h)}o.visible=!0}},this.getRenderTarget=function(){return S}};return t.prototype=Object.create(e.Mesh.prototype),t.prototype.constructor=t,t.ReflectorShader={uniforms:{color:{type:"c",value:null},tDiffuse:{type:"t",value:null},textureMatrix:{type:"m4",value:null}},vertexShader:["uniform mat4 textureMatrix;","varying vec4 vUv;","void main() {","\tvUv = textureMatrix * vec4( position, 1.0 );","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform vec3 color;","uniform sampler2D tDiffuse;","varying vec4 vUv;","float blendOverlay( float base, float blend ) {","\treturn( base < 0.5 ? ( 2.0 * base * blend ) : ( 1.0 - 2.0 * ( 1.0 - base ) * ( 1.0 - blend ) ) );","}","vec3 blendOverlay( vec3 base, vec3 blend ) {","\treturn vec3( blendOverlay( base.r, blend.r ), blendOverlay( base.g, blend.g ), blendOverlay( base.b, blend.b ) );","}","void main() {","\tvec4 base = texture2DProj( tDiffuse, vUv );","\tgl_FragColor = vec4( blendOverlay( base.rgb, color ), 1.0 );","}"].join("\n")},t};
//# sourceMappingURL=/sm/852a8175a9162d00e4aaca09e0e10d76907f28a29907fcab8de0dea1952db921.map
